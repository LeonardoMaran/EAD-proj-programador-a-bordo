nvm use 10.15.3

npm init

eslint usage

./node/node_modules/eslint/bin/eslint.js --init

to chech sintax and find problems
commonJS - para node exportacao de modulos
Json

eslint airbnb

npx install-peerdeps --dev eslint-config-airbnb-base

Add "extends": "airbnb-base" to your .eslintrc.


Video 6

Mongo ira salvar

usuarios
cursos
categorias
plataforma

mysql

planos
matriculas
pagamentos

3 tabelas principais que ira gerar outras tabelas

neste caso os planos sera definido quantos meses sao,os precos

matriculas

dados geerados de quando comecou quando e que termina

pagamento, dados do pagamento 
gateway de pagamento, se foi parcelado, valor total 
status de pagamento, se esta pendente
se ja foi pago, se e boleto, cartao

matriculas

qual foi o pagamento, quais sao os planos, qual e o curso, qual e o aluno,
quando termina  


O mongo tem os dados do usuario que permite reunir tuo em um unico documento
ja no mysql teria que fazer uma query, que e muita informacao especifica do
usuario eu nao precisaria por isto em outra tabela

na tabela tera controle de acessos

o administrador tera acesso privielgiado

tem o professor que poderacriar alguns cursos,editar, nao podera deletar cursos
nao podera deletar usuarios ou criar usuarios

na api tera um sistema de controle de acesso

Video 7 - docker

vou criar na raiz o docker composer 

docker-compose.yml

docker hub 

imagem oficial node 

versao slim, menos pesada, o container fica menor 

duas variraveis nescesarias do mongo qaundo executa o docker

MONGO_INITDB_ROOT_USERNAME: root
MONGO_INITDB_ROOT_PASSWORD: example

porque esta variaveis sao nescessarias

quando voce acessar o mongo pela primeira  vez ele vai criar um 
usuario so que ele so vai ter acesso ao banco de dados admin que e o banco 
 por padrao, depois eu preciso ir manualmente no banco para criar as permissoes 
 que o usuario que vai ter permissoes que vai ser o banco que o usuario vai criar
que vai ser o banco da plataforma. agente vai criar um usuario proprio para o nosso
banco  de dados que e por questao de seguranca, que por exemplo o usuario so vai ter
permissao de leitura  escrita, ele nao vai ter permissao para apagar um banco, se um hacker 
um usuario consegue fazer uma operacao qeu nao deveria, tentar apagar o nosso banco de dados 
ele nao vai conseguir porque o usuario que agente criou no banco de daods na tem esta permissao
 de apagar banco de dados, os banco de dados tem estas questes de usuarios que tem permissoes para fazer 
 operacoes, entao nos vamos cruar um usuario que tem permissoes restritas para que um  uuario mal 
 intencionado tnete faazer uma operacao perigosa como deletar o banco como eu falei ele nao vai conseguir
 que nao tem esta permissao  

   docker-compose up -d   

   executei o docker compose, ele startou os dois containers

   video 8 

   rodar 

   docker-compose up -d

   docker ps

  aqui no container do mongo agente inicializa com o usuario root do banco  admin
  e o unico usuario qu tem no mongo neste momento, o username e root e a senha e example
  porem agente nao consegue usar este uuario que agente vai criar para a nossa aplicacao la no mongo
  para isso agente precisa  criar um usuario proprio para o nosso banco de dados, eu vou criar isto aqui manualmente
  no terminal para ficar mais interessante, eu vou acessar ete container do mongo 

  para acessar o termnal do mongo, copia o idd

   docker exec -it  82ff63793185 /bin/bash

   eu estou agora dentro do container do mongo, vou digitar ls

   agora eu vou digitar no terminal

   mongo -u root -p

   senha vai ser example

   agora estou dentro do meu mongo

   se eu dar um 

   show database

   eu tenho um banco admin, config e local

   para eu criar um banco no mongo na verdade e muito simples basta eu mandar usar ele e muito simples 
   basta eu usar ele, o nome do banco e eadapi

   use eadapi

   ja estou dentro dele e agora eu vou criar um usuario que vai ter permissao de escrita
   e leitura deste banco de dados, nao e uma permissao muito permitiva. Eu vou criar um proprio 
   comado do mongo, eu vou criar um usuario especifico deste banco de dados,

   db.createUser(
     {
     user:"ead_api_user", 
     pwd:"ead_api_user",
     roles:["readWrite"]
   }
   );  

roles permissoes

se eu digitar agora 

show users

, ele vai agora aparecer aqui 

o id dele, o usuario, e tem a role de escrita e leitura

agora que eu criei vou sair deste banco

exit

estou aqui no meu codigo e no meu index nao tem nada de especial, estou startando
o server, vamos ver se ele esta respondendo aqui certo, vou coloccar aqui localhost
3000,  

docker logs -f 82ff63793185

aqui e o log para ver o que esta acontecnedo

aqui e o host precisa ser 0.0.0.0

ok, printou o hello world, esta rodando 

preciso colocar os dados de usuario e senha em variaveis de ambientes 
para quando a aplicacao estiver em producao. Entao cada ambiente na maquina tem
suas proprias variaveis, uma senha na minha  maquina e um, e em producao e outra
entao ele precisa pegar. Para eu fazer isto local aqui na maquina, eu vou usar um cara chamado
dot.env 

dotenv-safe - npm 

qu atraves deste modulo node ele carrega para mim as variaveis de ambiente dentro do meu projeto

vou instalar o mongoose

npm install --save mongoose

















